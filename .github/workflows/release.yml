name: Release model-service

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest --maxfail=5 --disable-warnings
        

      - name: Parse version info from tag
        run: |
          # GITHUB_REF is like refs/tags/v2.3.5, so strip the first 11 chars
          VERSION=${GITHUB_REF:11}
          MAJOR=$(echo "$VERSION" | cut -d . -f 1)
          MINOR=$(echo "$VERSION" | cut -d . -f 2)
          PATCH=$(echo "$VERSION" | cut -d . -f 3)
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "version_major=$MAJOR" >> $GITHUB_ENV
          echo "version_minor=$MINOR" >> $GITHUB_ENV
          echo "version_patch=$PATCH" >> $GITHUB_ENV

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.version }}
          body: |
            ## Changes in this release:
            - Major version: ${{ env.version_major }}
            - Minor version: ${{ env.version_minor }}
            - Patch version: ${{ env.version_patch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Set up Docker Buildx
        run: |
          docker buildx create --use

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.GH_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push multi-arch Docker image
        run: |
          docker buildx build --platform linux/arm64/v8,linux/amd64 \
            --tag ghcr.io/remla25-team12/model-service:${{ env.version }} \
            --push .

